name: Development CI/CD

on:
  push:
    branches: [ dev ]

  workflow_dispatch:

jobs:

  changes:
    name: Changes
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      web: ${{ steps.filter.outputs.web }}
      static: ${{ steps.filter.outputs.static }}
      listmonk: ${{ steps.filter.outputs.listmonk }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Compare
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          api:
            - 'apps/api/**'
            - 'packages/kubernetes/api.yaml'
            - '.github/**'
          web:
            - 'apps/web/**'
            - 'packages/kubernetes/web.yaml'
            - '.github/**'
          static:
            - 'packages/kubernetes/static.yaml'
            - '.github/**'
          listmonk:
            - 'packages/kubernetes/listmonk.yaml'
            - '.github/**'

  build-api:
    name: Build API
    runs-on: ubuntu-latest
    environment: dev
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the certificate
        run: 'echo "$NLR_CA" > ${{github.workspace}}/ca.pem'
        shell: bash
        env:
          NLR_CA: ${{secrets.NLR_CA}}

      - name: Copy cert to trust local registry
        shell: bash
        run: 'sudo sh ${{github.workspace}}/packages/scripts/cert.sh'

      - name: Set up Docker context for Buildx
        id: buildx-context
        run: docker context create builders || docker context use builders

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          endpoint: builders
          config-inline: |
            [registry."registry.k8s1.flat.nathanrignall.uk:5000"]
            ca=["${{github.workspace}}/ca.pem"]

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: registry.k8s1.flat.nathanrignall.uk:5000
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          file: apps/api/Dockerfile
          tags: |
            registry.k8s1.flat.nathanrignall.uk:5000/oscar-ox-dev-api:latest
            registry.k8s1.flat.nathanrignall.uk:5000/oscar-ox-dev-api:${{ github.sha }}
          secrets: |
            "github-token=${{ secrets.GITHUB_TOKEN }}"

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    environment: dev
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the certificate
        run: 'echo "$NLR_CA" > ${{github.workspace}}/ca.pem'
        shell: bash
        env:
          NLR_CA: ${{secrets.NLR_CA}}
      
      - name: Copy cert to trust local registry
        shell: bash
        run: 'sudo sh ${{github.workspace}}/packages/scripts/cert.sh'

      - name: Set up Docker context for Buildx
        id: buildx-context
        run: docker context create builders || docker context use builders

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          endpoint: builders
          config-inline: |
            [registry."registry.k8s1.flat.nathanrignall.uk:5000"]
            ca=["${{github.workspace}}/ca.pem"]

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: registry.k8s1.flat.nathanrignall.uk:5000
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          file: apps/web/Dockerfile
          tags: |
            registry.k8s1.flat.nathanrignall.uk:5000/oscar-ox-dev-web:latest
            registry.k8s1.flat.nathanrignall.uk:5000/oscar-ox-dev-web:${{ github.sha }}
          secrets: |
            "github-token=${{ secrets.GITHUB_TOKEN }}"
          build-args: |
            API_V1_URL=${{ secrets.API_V1_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=ma

  deploy-api:
    name: Deploy API
    needs: [ build-api ]
    runs-on: self-hosted
    environment: dev
    steps:
      - name: Kubectl tool installer
        uses: azure/setup-kubectl@v3.0
        with:
          version: 'v1.24.4'

      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Set Kubernetes secrets
        uses: azure/k8s-create-secret@v4
        with:
          namespace: oscar-ox-dev
          secret-name: api-secrets
          data: ${{ secrets.API_CONFIG }}

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v1
        with:
          namespace: oscar-ox-dev
          manifests: |
            packages/kubernetes/api.yaml
          images: |
            registry.k8s1.flat.nathanrignall.uk:5000/oscar-ox-dev-api:${{ github.sha }}

  deploy-web:
    name: Deploy Web
    needs: [ build-web ]
    runs-on: self-hosted
    environment: dev
    steps:
      - name: Kubectl tool installer
        uses: azure/setup-kubectl@v3.0
        with:
          version: 'v1.24.4'

      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v4.4
        with:
          namespace: oscar-ox-dev
          manifests: |
            packages/kubernetes/web.yaml
          images: |
            registry.k8s1.flat.nathanrignall.uk:5000/oscar-ox-dev-web:${{ github.sha }}